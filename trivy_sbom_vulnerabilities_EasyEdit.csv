OrganizationName,OrganizationID,RepositoryURL,VulnerabilityID,PkgID,PkgName,InstalledVersion,FixedVersion,Status,Severity,CweIDs,CVSS,PrimaryURL,References,PublishedDate,LastModifiedDate,Title,Target,Class,Type,Description
,,https://github.com/zjunlp/EasyEdit,CVE-2023-6572,gradio@4.5.0,gradio,4.5.0,4.14.0,fixed,CRITICAL,['CWE-77'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N', 'V3Score': 9.6}, 'nvd': {'V3Vector': 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N', 'V3Score': 8.1}}",https://avd.aquasec.com/nvd/cve-2023-6572,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/5b5af1899dd98d63e1f9b48a93601c2db1f56520', 'https://github.com/pypa/advisory-database/tree/main/vulns/gradio/PYSEC-2023-255.yaml', 'https://huntr.com/bounties/21d2ff0c-d43a-4afd-bb4d-049ee8da5b5c', 'https://nvd.nist.gov/vuln/detail/CVE-2023-6572']",2023-12-14T14:15:46.013Z,2024-02-28T14:08:41.697Z,Gradio Exposure of Sensitive Information to an Unauthorized Actor vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,Command Injection in GitHub repository gradio-app/gradio prior to main.
,,https://github.com/zjunlp/EasyEdit,CVE-2023-51449,gradio@4.5.0,gradio,4.5.0,4.11.0,fixed,HIGH,['CWE-22'],"{'ghsa': {'V3Vector': 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L', 'V3Score': 8.6}, 'nvd': {'V3Vector': 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N', 'V3Score': 7.5}}",https://avd.aquasec.com/nvd/cve-2023-51449,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/1b9d4234d6c25ef250d882c7b90e1f4039ed2d76', 'https://github.com/gradio-app/gradio/commit/7ba8c5da45b004edd12c0460be9222f5b5f5f055', 'https://github.com/gradio-app/gradio/security/advisories/GHSA-6qm2-wpxq-7qh2', 'https://github.com/pypa/advisory-database/tree/main/vulns/gradio/PYSEC-2023-249.yaml', 'https://nvd.nist.gov/vuln/detail/CVE-2023-51449']",2023-12-22T21:15:09Z,2024-01-09T20:18:05.027Z,Gradio makes the `/file` secure against file traversal and server-side request forgery attacks,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"Gradio is an open-source Python package that allows you to quickly build a demo or web application for your machine learning model, API, or any arbitary Python function. Versions of `gradio` prior to 4.11.0 contained a vulnerability in the `/file` route which made them susceptible to file traversal attacks in which an attacker could access arbitrary files on a machine running a Gradio app with a public URL (e.g. if the demo was created with `share=True`, or on Hugging Face Spaces) if they knew the path of files to look for. This issue has been patched in version 4.11.0."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-0964,gradio@4.5.0,gradio,4.5.0,4.9.0,fixed,HIGH,['CWE-22'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N', 'V3Score': 7.5}, 'nvd': {'V3Vector': 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L', 'V3Score': 9.4}}",https://avd.aquasec.com/nvd/cve-2024-0964,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/d76bcaaaf0734aaf49a680f94ea9d4d22a602e70', 'https://huntr.com/bounties/25e25501-5918-429c-8541-88832dfd3741', 'https://nvd.nist.gov/vuln/detail/CVE-2024-0964']",2024-02-05T23:15:08.19Z,2024-02-13T18:42:22.847Z,Gradio Path Traversal vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,A local file include could be remotely triggered in Gradio due to a vulnerable user-supplied JSON value in an API request.
,,https://github.com/zjunlp/EasyEdit,CVE-2024-1561,gradio@4.5.0,gradio,4.5.0,4.13.0,fixed,HIGH,['CWE-29'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N', 'V3Score': 7.5}}",https://avd.aquasec.com/nvd/cve-2024-1561,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/24a583688046867ca8b8b02959c441818bdb34a2', 'https://huntr.com/bounties/4acf584e-2fe8-490e-878d-2d9bf2698338', 'https://nvd.nist.gov/vuln/detail/CVE-2024-1561', 'https://www.gradio.app/changelog#4-13-0']",2024-04-16T00:15:08.887Z,2024-05-10T15:15:07.133Z,gradio vulnerable to Path Traversal,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"An issue was discovered in gradio-app/gradio, where the `/component_server` endpoint improperly allows the invocation of any method on a `Component` class with attacker-controlled arguments. Specifically, by exploiting the `move_resource_to_block_cache()` method of the `Block` class, an attacker can copy any file on the filesystem to a temporary directory and subsequently retrieve it. This vulnerability enables unauthorized local file read access, posing a significant risk especially when the application is exposed to the internet via `launch(share=True)`, thereby allowing remote attackers to read files on the host machine. Furthermore, gradio apps hosted on `huggingface.co` are also affected, potentially leading to the exposure of sensitive information such as API keys and credentials stored in environment variables."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-1728,gradio@4.5.0,gradio,4.5.0,4.19.2,fixed,HIGH,['CWE-22'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N', 'V3Score': 7.5}}",https://avd.aquasec.com/nvd/cve-2024-1728,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/16fbe9cd0cffa9f2a824a0165beb43446114eec7', 'https://huntr.com/bounties/9bb33b71-7995-425d-91cc-2c2a2f2a068a', 'https://nvd.nist.gov/vuln/detail/CVE-2024-1728']",2024-04-10T17:15:53.097Z,2024-04-10T19:49:51.183Z,Gradio Local File Inclusion vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"gradio-app/gradio is vulnerable to a local file inclusion vulnerability due to improper validation of user-supplied input in the UploadButton component. Attackers can exploit this vulnerability to read arbitrary files on the filesystem, such as private SSH keys, by manipulating the file path in the request to the `/queue/join` endpoint. This issue could potentially lead to remote code execution. The vulnerability is present in the handling of file upload paths, allowing attackers to redirect file uploads to unintended locations on the server."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-2206,gradio@4.5.0,gradio,4.5.0,4.18.0,fixed,HIGH,['CWE-918'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L', 'V3Score': 7.3}}",https://avd.aquasec.com/nvd/cve-2024-2206,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/49d9c48537aa706bf72628e3640389470138bdc6', 'https://huntr.com/bounties/2286c1ed-b889-45d6-adda-7014ea06d98e', 'https://nvd.nist.gov/vuln/detail/CVE-2024-2206']",2024-03-27T01:15:46.613Z,2024-04-16T12:15:10.187Z,gradio Server-Side Request Forgery vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"An SSRF vulnerability exists in the gradio-app/gradio due to insufficient validation of user-supplied URLs in the `/proxy` route. Attackers can exploit this vulnerability by manipulating the `self.replica_urls` set through the `X-Direct-Url` header in requests to the `/` and `/config` routes, allowing the addition of arbitrary URLs for proxying. This flaw enables unauthorized proxying of requests and potential access to internal endpoints within the Hugging Face space. The issue arises from the application's inadequate checking of safe URLs in the `build_proxy_request` function."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-1183,gradio@4.5.0,gradio,4.5.0,4.10.0,fixed,MEDIUM,['CWE-601'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N', 'V3Score': 6.5}}",https://avd.aquasec.com/nvd/cve-2024-1183,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/2ad3d9e7ec6c8eeea59774265b44f11df7394bb4', 'https://github.com/gradio-app/gradio/commit/7ba8c5da45b004edd12c0460be9222f5b5f5f055', 'https://huntr.com/bounties/103434f9-87d2-42ea-9907-194a3c25007c', 'https://nvd.nist.gov/vuln/detail/CVE-2024-1183']",2024-04-16T00:15:07.99Z,2024-04-16T13:24:07.103Z,gradio Server-Side Request Forgery vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"An SSRF (Server-Side Request Forgery) vulnerability exists in the gradio-app/gradio repository, allowing attackers to scan and identify open ports within an internal network. By manipulating the 'file' parameter in a GET request, an attacker can discern the status of internal ports based on the presence of a 'Location' header or a 'File not allowed' error in the response."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-1727,gradio@4.5.0,gradio,4.5.0,4.19.2,fixed,MEDIUM,['CWE-352'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L', 'V3Score': 4.3}}",https://avd.aquasec.com/nvd/cve-2024-1727,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/84802ee6a4806c25287344dce581f9548a99834a', 'https://github.com/gradio-app/gradio/pull/7503', 'https://huntr.com/bounties/a94d55fb-0770-4cbe-9b20-97a978a2ffff', 'https://nvd.nist.gov/vuln/detail/CVE-2024-1727']",2024-03-21T20:15:07.62Z,2024-04-16T12:15:09.843Z,Cross-Site Request Forgery in Gradio,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"A Cross-Site Request Forgery (CSRF) vulnerability in gradio-app/gradio allows attackers to upload multiple large files to a victim's system if they are running Gradio locally. By crafting a malicious HTML page that triggers an unauthorized file upload to the victim's server, an attacker can deplete the system's disk space, potentially leading to a denial of service. This issue affects the file upload functionality as implemented in gradio/routes.py."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-1729,gradio@4.5.0,gradio,4.5.0,4.19.2,fixed,MEDIUM,['CWE-367'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N', 'V3Score': 5.9}}",https://avd.aquasec.com/nvd/cve-2024-1729,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/e329f1fd38935213fe0e73962e8cbd5d3af6e87b', 'https://github.com/gradio-app/gradio/releases/tag/gradio%404.19.2', 'https://github.com/gradio-app/gradio/security/advisories/GHSA-hmx6-r76c-85g9', 'https://huntr.com/bounties/f6a10a8d-f538-4cb7-9bb2-85d9f5708124', 'https://nvd.nist.gov/vuln/detail/CVE-2024-1729']",2024-03-29T05:15:45.477Z,2024-04-16T12:15:09.93Z,Gradio apps vulnerable to timing attacks to guess password,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"A timing attack vulnerability exists in the gradio-app/gradio repository, specifically within the login function in routes.py. The vulnerability arises from the use of a direct comparison operation (`app.auth[username] == password`) to validate user credentials, which can be exploited to guess passwords based on response times. Successful exploitation of this vulnerability could allow an attacker to bypass authentication mechanisms and gain unauthorized access."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-34511,gradio@4.5.0,gradio,4.5.0,4.13.0,fixed,MEDIUM,,"{'ghsa': {'V3Vector': 'CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N', 'V3Score': 6.5}}",https://avd.aquasec.com/nvd/cve-2024-34511,"['https://github.com/gradio-app/gradio', 'https://github.com/gradio-app/gradio/commit/24a583688046867ca8b8b02959c441818bdb34a2', 'https://nvd.nist.gov/vuln/detail/CVE-2024-34511', 'https://www.gradio.app/changelog#4-13-0']",2024-05-05T20:15:07.627Z,2024-05-14T15:39:15.78Z,Gradio's Component Server does not properly consider` _is_server_fn` for functions,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2024-1561. Reason: This candidate is a duplicate of CVE-2024-1561. Notes: All CVE users should reference CVE-2024-1561 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage.
,,https://github.com/zjunlp/EasyEdit,CVE-2023-6730,transformers@4.34.0,transformers,4.34.0,4.36.0,fixed,CRITICAL,['CWE-502'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H', 'V3Score': 9}, 'nvd': {'V3Vector': 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H', 'V3Score': 8.8}}",https://avd.aquasec.com/nvd/cve-2023-6730,"['https://github.com/huggingface/transformers', 'https://github.com/huggingface/transformers/commit/1d63b0ec361e7a38f1339385e8a5a855085532ce', 'https://huntr.com/bounties/423611ee-7a2a-442a-babb-3ed2f8385c16', 'https://nvd.nist.gov/vuln/detail/CVE-2023-6730']",2023-12-19T13:15:43.38Z,2023-12-28T17:15:33.537Z,transformers has a Deserialization of Untrusted Data vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,Deserialization of Untrusted Data in GitHub repository huggingface/transformers prior to 4.36.
,,https://github.com/zjunlp/EasyEdit,CVE-2023-7018,transformers@4.34.0,transformers,4.34.0,4.36.0,fixed,HIGH,['CWE-502'],"{'ghsa': {'V3Vector': 'CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H', 'V3Score': 7.8}, 'nvd': {'V3Vector': 'CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H', 'V3Score': 7.8}}",https://avd.aquasec.com/nvd/cve-2023-7018,"['https://github.com/huggingface/transformers', 'https://github.com/huggingface/transformers/commit/1d63b0ec361e7a38f1339385e8a5a855085532ce', 'https://huntr.com/bounties/e1a3e548-e53a-48df-b708-9ee62140963c', 'https://nvd.nist.gov/vuln/detail/CVE-2023-7018']",2023-12-20T17:15:08.823Z,2023-12-30T03:13:12.367Z,transformers has a Deserialization of Untrusted Data vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,Deserialization of Untrusted Data in GitHub repository huggingface/transformers prior to 4.36.
,,https://github.com/zjunlp/EasyEdit,CVE-2024-3568,transformers@4.34.0,transformers,4.34.0,4.38.0,fixed,LOW,['CWE-502'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:N/A:L', 'V3Score': 3.4}}",https://avd.aquasec.com/nvd/cve-2024-3568,"['https://github.com/huggingface/transformers', 'https://github.com/huggingface/transformers/commit/693667b8ac8138b83f8adb6522ddaf42fa07c125', 'https://huntr.com/bounties/b3c36992-5264-4d7f-9906-a996efafba8f', 'https://nvd.nist.gov/vuln/detail/CVE-2024-3568']",2024-04-10T17:15:58.16Z,2024-04-10T19:49:51.183Z,Transformers Deserialization of Untrusted Data vulnerability,demo/SafeEdit_demo/requirements.txt,lang-pkgs,pip,"The huggingface/transformers library is vulnerable to arbitrary code execution through deserialization of untrusted data within the `load_repo_checkpoint()` function of the `TFPreTrainedModel()` class. Attackers can execute arbitrary code and commands by crafting a malicious serialized payload, exploiting the use of `pickle.load()` on data from potentially untrusted sources. This vulnerability allows for remote code execution (RCE) by deceiving victims into loading a seemingly harmless checkpoint during a normal training process, thereby enabling attackers to execute arbitrary code on the targeted machine."
,,https://github.com/zjunlp/EasyEdit,CVE-2021-3842,nltk@3.6.5,nltk,3.6.5,3.6.6,fixed,HIGH,['CWE-1333'],"{'ghsa': {'V3Vector': 'CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H', 'V3Score': 7.5}, 'nvd': {'V2Vector': 'AV:N/AC:L/Au:N/C:N/I:N/A:P', 'V3Vector': 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H', 'V2Score': 5, 'V3Score': 7.5}}",https://avd.aquasec.com/nvd/cve-2021-3842,"['https://github.com/nltk/nltk', 'https://github.com/nltk/nltk/commit/2a50a3edc9d35f57ae42a921c621edc160877f4d', 'https://github.com/nltk/nltk/pull/2906', 'https://huntr.dev/bounties/761a761e-2be2-430a-8d92-6f74ffe9866a', 'https://nvd.nist.gov/vuln/detail/CVE-2021-3842']",2022-01-04T15:15:07.833Z,2022-01-12T21:15:39.057Z,nltk is vulnerable to Inefficient Regular Expression Complexity,requirements.txt,lang-pkgs,pip,nltk is vulnerable to Inefficient Regular Expression Complexity
,,https://github.com/zjunlp/EasyEdit,CVE-2021-43854,nltk@3.6.5,nltk,3.6.5,3.6.6,fixed,HIGH,['CWE-400'],"{'ghsa': {'V3Vector': 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H', 'V3Score': 7.5}, 'nvd': {'V2Vector': 'AV:N/AC:L/Au:N/C:N/I:N/A:P', 'V2Score': 5}}",https://avd.aquasec.com/nvd/cve-2021-43854,"['https://github.com/nltk/nltk', 'https://github.com/nltk/nltk/commit/1405aad979c6b8080dbbc8e0858f89b2e3690341', 'https://github.com/nltk/nltk/issues/2866', 'https://github.com/nltk/nltk/pull/2869', 'https://github.com/nltk/nltk/security/advisories/GHSA-f8m6-h2c7-8h9x', 'https://nvd.nist.gov/vuln/detail/CVE-2021-43854']",2021-12-23T18:15:07.327Z,2022-01-04T16:38:20.947Z,NLTK (Natural Language Toolkit) is a suite of open source Python modul ...,requirements.txt,lang-pkgs,pip,"NLTK (Natural Language Toolkit) is a suite of open source Python modules, data sets, and tutorials supporting research and development in Natural Language Processing. Versions prior to 3.6.5 are vulnerable to regular expression denial of service (ReDoS) attacks. The vulnerability is present in PunktSentenceTokenizer, sent_tokenize and word_tokenize. Any users of this class, or these two functions, are vulnerable to the ReDoS attack. In short, a specifically crafted long input to any of these vulnerable functions will cause them to take a significant amount of execution time. If your program relies on any of the vulnerable functions for tokenizing unpredictable user input, then we would strongly recommend upgrading to a version of NLTK without the vulnerability. For users unable to upgrade the execution time can be bounded by limiting the maximum length of an input to any of the vulnerable functions. Our recommendation is to implement such a limit."
,,https://github.com/zjunlp/EasyEdit,CVE-2024-34062,tqdm@4.62.3,tqdm,4.62.3,4.66.3,fixed,LOW,['CWE-74'],"{'ghsa': {'V3Vector': 'CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N', 'V3Score': 3.9}, 'redhat': {'V3Vector': 'CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H', 'V3Score': 7.3}}",https://avd.aquasec.com/nvd/cve-2024-34062,"['https://access.redhat.com/security/cve/CVE-2024-34062', 'https://github.com/tqdm/tqdm', 'https://github.com/tqdm/tqdm/commit/4e613f84ed2ae029559f539464df83fa91feb316', 'https://github.com/tqdm/tqdm/security/advisories/GHSA-g7vv-2v7x-gj9p', 'https://nvd.nist.gov/vuln/detail/CVE-2024-34062', 'https://www.cve.org/CVERecord?id=CVE-2024-34062']",2024-05-03T10:15:08.5Z,2024-05-03T12:48:41.067Z,python-tqdm: non-boolean CLI arguments may lead to local code execution,requirements.txt,lang-pkgs,pip,"tqdm is an open source progress bar for Python and CLI. Any optional non-boolean CLI arguments (e.g. `--delim`, `--buf-size`, `--manpath`) are passed through python's `eval`, allowing arbitrary code execution. This issue is only locally exploitable and had been addressed in release version 4.66.3. All users are advised to upgrade. There are no known workarounds for this vulnerability."
